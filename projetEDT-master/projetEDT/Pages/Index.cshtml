@page
@model IndexModel
@{
    ViewData["Title"] = "Accueil";
}

<div class="text-center">

    <div id="calendar"> </div>

</div>


<div id="calendarModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <div id="modalBody" class="modal-body"> </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



<script>
    var calendarEl = document.getElementById("calendar");

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['dayGrid', 'timeGrid', 'list'],
            defaultView: 'timeGridWeek',
            allDaySlot: false,
            minTime: "07:00:00",
            maxTime: "21:00:00",
            firstDay: 1, //premier jour c'est Lundi
            buttonText: {
                today: 'Aujourd\'hui',
                month: 'mois',
                week: 'semaine',
                day: 'jour',
                list: 'liste'
            },
            eventTimeFormat: {
                hour: 'numeric',
                minute: '2-digit',
                meridiem: false
            },
            eventClick: function (info, jsEvent, view) {
                var contentModal = replaceString("\n", "<br>", info.event.title);
                
                $('#modalBody').html(
                    contentModal + "<br>" +
                    info.event.start.toString().substring(16, 21) + " - " + info.event.end.toString().substring(16, 21)
                );
                $('#eventUrl').attr('href', event.url);
                $('#calendarModal').modal();
            },
            locale: 'fr'//jour afficher en fr
        });

        @foreach (var item in @Model.Seance)
        {
            <text>
                var date = new Date("@item.Jour.AddHours(@item.HeureDebut.Hour).AddMinutes(@item.HeureDebut.Minute).ToString("o")");
                var datef = new Date("@item.Jour.AddHours(@item.HeureDebut.Hour).AddMinutes(@item.HeureDebut.Minute).AddHours(@item.Duree).ToString("o")");
                var titre = "@item.Type.Intitule" + "\n[cours] " + "@item.LUE.Intitule" + "\n[groupe] " + "@item.LeGroupe.NomGroupe" + "\n[salle] " + "@item.LaSalle.toString";
                

                if ("CM".localeCompare("@item.Type.Intitule") == 0) {
                    var couleur = ""
                }
                if ("TP".localeCompare("@item.Type.Intitule") == 0) {
                    var couleur = "yellow"
                }
                if ("TD".localeCompare("@item.Type.Intitule") == 0) {
                    couleur = "green"
                }

                calendar.addEvent({
                    title: titre,
                    start: date,
                    end: datef,
                    allDay: false,
                    color: couleur
                });
            </text>
        }


        calendar.render();// Genere le calendrier


    });


    function replaceString(oldS, newS, fullS) { //Fonction qui remplace une sous-chaine dans une chaine
        // On remplace oldS avec newS dans fullS
        for (var i = 0; i < fullS.length; i++) {
            if (fullS.substring(i, i + oldS.length) == oldS) {
                fullS = fullS.substring(0, i) + newS + fullS.substring(i + oldS.length, fullS.length);
            }
        }
        return fullS;
    }

</script>

